import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;

public class Encryption {

	/*
	 	If the account is a ‘Current’ account,
	  	multiply the balance with the length of it’s customer name.

 		If the account is a ‘Deposit’ account,
 		add the balance to the length of its customer name.

		meant for encrypting the balance alone
		 without the account holder's name


	 */

	//private String encryptiontype;

	public void Encrypt(int id, String type, String name, double balance )
			throws FileNotFoundException, IOException{

		if(type.equals("Current")){
			Current_encrypt(id, type, name, balance);
		}
		else if(type.equals("Deposit")){
			Deposit_encrypt(id, type, name, balance);
		}

		ObjectOutputStream output =
				new ObjectOutputStream (new FileOutputStream("account.dat"));
		Account accountencrypt = new Account(id, type, balance);
		//output.writeObject(accountencrypt);

		System.out.println("Encrypted information: " +
		"\nID: " + accountencrypt.getAccountId() + "\nAccount Type: " +
		accountencrypt.getAccountType() +
		"\nAccount Balance(Encryped not true balance): " +
		accountencrypt.getBalance());

		output.close();


	}

	public void Current_encrypt(int id, String type, String name, double balance){
		//System.out.println("balance before encryption: " + balance);
		balance = balance * name.length();
		//System.out.println("balance after encryption: " + balance);
	}

	public void Deposit_encrypt(int id, String type, String name, double balance){
		//System.out.println("balance before encryption: " + balance);
		balance = balance + name.length();
		//System.out.println("balance after encryption: " + balance);

	}


}
